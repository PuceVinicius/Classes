******************************
Code quality:
------------------------------
Code grade: 9.35/10.0	(Great code quality)
------------------------------
Standards deviation:
statement:	0
info:	0
convention:	9
refactor:	22
warning:	2
error:	0
fatal:	0
------------------------------
Deviation description:
too-many-lines:	1
useless-super-delegation:	2
consider-using-enumerate:	6
too-many-branches:	2
too-few-public-methods:	4
invalid-name:	1
no-self-use:	1
too-many-locals:	2
no-else-return:	11
len-as-condition:	1
too-many-return-statements:	1
too-many-statements:	1
******************************
Tests:
------------------------------
Part00: RandomAgent Improved
Python error: list index out of range
Test did not concluded
Receiving grade 0.0 in the test
Grade in the Test00: 0.0/10.0
------------------------------
Part01:
Grade in the Test01: 0.0/10.0
------------------------------
Part02:
This autograder does not test Part02
because we need two instances of AlphaBetaAgent:
    -One using evaluation_function
    -One using my_better_evaluation_function
In order to test your implementation
you should run both instances against GetClosest
using different game grids, like the ones
presented in interesting_grids.txt.
The agent using my_better should be able to
get equal or higher score in most of the examples.******************************
Code quality:
------------------------------
Code grade: 9.35/10.0	(Great code quality)
------------------------------
Standards deviation:
statement:	0
info:	0
convention:	9
refactor:	22
warning:	2
error:	0
fatal:	0
------------------------------
Deviation description:
too-many-lines:	1
useless-super-delegation:	2
consider-using-enumerate:	6
too-many-branches:	2
too-few-public-methods:	4
invalid-name:	1
no-self-use:	1
too-many-locals:	2
no-else-return:	11
len-as-condition:	1
too-many-return-statements:	1
too-many-statements:	1
******************************
Tests:
------------------------------
Part00: RandomAgent Improved
Grade in the Test00: 0.0/10.0
******************************
Code quality:
------------------------------
Code grade: 9.35/10.0	(Great code quality)
------------------------------
Standards deviation:
statement:	0
info:	0
convention:	9
refactor:	22
warning:	2
error:	0
fatal:	0
------------------------------
Deviation description:
too-many-lines:	1
useless-super-delegation:	2
consider-using-enumerate:	6
too-many-branches:	2
too-few-public-methods:	4
invalid-name:	1
no-self-use:	1
too-many-locals:	2
no-else-return:	11
len-as-condition:	1
too-many-return-statements:	1
too-many-statements:	1
******************************
Tests:
------------------------------
Part00: RandomAgent Improved
Test concluded without errors
Grade in the Test00: 8.0/10.0
------------------------------
Part01:
Test concluded without errors
Grade in the Test01: 5.0/10.0
------------------------------
Part02:
This autograder does not test Part02
because we need two instances of AlphaBetaAgent:
    -One using evaluation_function
    -One using my_better_evaluation_function
In order to test your implementation
you should run both instances against GetClosest
using different game grids, like the ones
presented in interesting_grids.txt.
The agent using my_better should be able to
get equal or higher score in most of the examples.******************************
Code quality:
------------------------------
Code grade: 9.13/10.0	(Great code quality)
------------------------------
Standards deviation:
statement:	0
info:	0
convention:	13
refactor:	27
warning:	5
error:	0
fatal:	0
------------------------------
Deviation description:
too-many-lines:	1
useless-super-delegation:	2
consider-using-enumerate:	8
invalid-name:	2
too-many-branches:	2
too-few-public-methods:	4
missing-docstring:	2
no-else-return:	13
no-self-use:	3
simplifiable-if-statement:	1
unused-variable:	3
too-many-locals:	2
too-many-return-statements:	1
too-many-statements:	1
******************************
Tests:
------------------------------
Part00: RandomAgent Improved
Test concluded without errors
Grade in the Test00: 10.0/10.0
------------------------------
Part01:
Test did not concluded in time
Receiving proportional grade in the test
Grade in the Test01: 0.1/10.0
------------------------------
Part02:
This autograder does not test Part02
because we need two instances of AlphaBetaAgent:
    -One using evaluation_function
    -One using my_better_evaluation_function
In order to test your implementation
you should run both instances against GetClosest
using different game grids, like the ones
presented in interesting_grids.txt.
The agent using my_better should be able to
get equal or higher score in most of the examples.******************************
Code quality:
------------------------------
Code grade: 9.13/10.0	(Great code quality)
------------------------------
Standards deviation:
statement:	0
info:	0
convention:	13
refactor:	27
warning:	5
error:	0
fatal:	0
------------------------------
Deviation description:
too-many-lines:	1
useless-super-delegation:	2
consider-using-enumerate:	8
invalid-name:	2
too-many-branches:	2
too-few-public-methods:	4
missing-docstring:	2
no-else-return:	13
no-self-use:	3
simplifiable-if-statement:	1
unused-variable:	3
too-many-locals:	2
too-many-return-statements:	1
too-many-statements:	1
******************************
Tests:
------------------------------
Part00: RandomAgent Improved
Grade in the Test00: 0.0/10.0
